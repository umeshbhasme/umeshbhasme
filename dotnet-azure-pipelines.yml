# Sample pipeline to build, test, and package a .NET Core application
# Requires NUnit, Coverlet, and ReportGenerator CLI dependencies in .csproj

trigger:
- master

pool:
  vmImage: 'windows-latest'

steps:
- task: DotNetCoreCLI@2
  displayName: 'Restore'
  inputs:
    command: 'restore'

- task: DotNetCoreCLI@2
  displayName: 'Build'
  inputs:
    command: 'build'

- task: DotNetCoreCLI@2
  displayName: Run tests
  inputs:
    command: 'test'
    arguments: /p:CollectCoverage=true /p:CoverletOutputFormat=cobertura /p:CoverletOutput=TestResults/Coverage/ /p:ExcludeByFile=**/Functions.cs

- task: reportgenerator@4
  displayName: Generate Code Coverage Report
  inputs:
    targetdir: $(Build.SourcesDirectory)/tests/TestResults/Coverage/Reports
    reports: $(Build.SourcesDirectory)/tests/TestResults/Coverage/coverage.cobertura.xml

- task: PublishCodeCoverageResults@1
  displayName: Publish Code Coverage
  inputs:
    codeCoverageTool: 'Cobertura'
    summaryFileLocation: $(Build.SourcesDirectory)/tests/TestResults/Coverage/coverage.cobertura.xml
    reportDirectory: $(Build.SourcesDirectory)/tests/TestResults/Coverage/Reports

- task: ArchiveFiles@2
  displayName: 'Archive Function Artifact'
  inputs:
    rootFolderOrFile: '$(Build.SourcesDirectory)/functions/bin/Debug/netcoreapp3.1'
    includeRootFolder: false
    archiveType: 'zip'
    archiveFile: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    replaceExistingArchive: true

- task: PublishBuildArtifacts@1
  displayName: 'Publish Function Artifact'
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)/$(Build.BuildId).zip'
    ArtifactName: 'drop'
    publishLocation: 'Container'